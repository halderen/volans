one zone, 10 000 entries, receiving 10% additions/deletions per hour and 50% changes per hour, double signed ZSK and KSK,
rolling KSK every month and rolling ZSK every week.  The double keys roll with a two week skew.
  - simulates a company with an overactive dynamic dns and experimentation

one zone, 100 000 entries, receiving 30% additions/deletions per year (evenly spread) and each record changes 3 times a
year, rolling KSK every year and rolling ZSK every month

same situation with 1 000 000, 2 250 000, 4 500 000, 7 500 000, 12 000 000 and 250 000 000 entries.

1 smoke
10 test
100 performance
        100 world nothing
      5 000 world sub
    100 000 world wannabe
  1 000 000 world player
 12 500 000 world leader
100 000 000 world domination
250 000 000 world monopoly

add n zones
cycle through
  add zone with n limit

void *collection_add(collection_t c, void* data);
void *collection_iter(collection_t c, void **iter);
void *collection_pop(collection_t c);

void *catalog_get(catalog_t c, char *name);
void *catalog_iter(catalog_t c, void **iter);
void *catalog_add(catalog_t c, void* data);

conquest
domination
monopoly
leader
player

0.03

- instantly (< 30 ms
- immediately ( < 0.3s)
- noticably ( < 1.5s )   requires button to move
- delayed ( < 6..8s )    requires visible change such as button disable
- processing ( < 40s )   requires busy animation, alternate flow possible
- tasked ( < 3m)         requires progress bar, abortable
- break ( < 10m )        requires time indication, abortable
- job ( > 5m )           requires asynchronous behavior

USE CASES

suite 1.

- Signing only, single zone, no rollover, no active KSK yet, first time signing
  of all records with single ZSK.  Zones 

use case 1.1
- zone side 1 record, timeout 5 minutes entire procedure, expected 

use case 1.2
